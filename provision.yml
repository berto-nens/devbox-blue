---
- hosts: local
  sudo: yes
  vars:
    home_dir: "/home/berto/"
    install_dir: "{{ home_dir }}install/"

  tasks:

  # setup directory structure
  - name: Create var dirs if not available.
    file: >
        path=/home/{{ local_user }}/{{ item }}
        owner={{ local_user }}
        group={{ local_user }}
        mode=0755
        state=directory
    with_items:
      - 'workspace'

  # NOTE: split in ruby-dev, python-dev, common, vagrant roles.

  # Common packages
  - name: Install common packages
    apt: pkg={{ item }}
    with_items:
      - screen
      - nano
      - debian-goodies
      - cmake
      - rake
      - ruby-dev
      - python-dev
      - git-core
      - tmux
      - imagemagick
      - pandoc
      - exuberant-ctags
      - htop
      - ipython
      - python-ipdb
      - markdown
      - cifs-utils
      - curl
      - ack-grep
      - pgadmin3
      - zsh
      - autojump
      - libreoffice
      - cmus
      - npm
      - sshpass

  # Chrome
  - name: "apt | ensure Google linux signing key present"
    apt_key: url=https://dl-ssl.google.com/linux/linux_signing_key.pub state=present

  - name: "apt | ensure Google chrome repo present"
    apt_repository: repo='deb http://dl.google.com/linux/chrome/deb/ stable main' state=present

  - name: "apt | ensure Google chrome present"
    apt: name=google-chrome-stable update_cache=yes

  # Sublime
  - name: Get SublimeText deb file
    sudo: no
    get_url: url="http://c758482.r82.cf2.rackcdn.com/sublime-text_build-3083_amd64.deb" dest="{{ install_dir }}sublime.deb"

  - name: Install SublimeText
    apt: deb="{{ install_dir }}sublime.deb"

  # remove unneeded packages
  - name: Remove unneeded packages
    apt: pkg={{ item }} state=absent purge=True
    with_items:
      - gnumeric
      - abiword
      - thunderbird
      - gnome-mines
      - gnome-sudoku
      - orage
      - gnome-user-guide
      - gimp-help-en
      - libdnet
      - dnet-common
      - avahi-daemon

  # Vagrant
  - name: Get vagrant deb file
    sudo: no
    get_url: url="https://dl.bintray.com/mitchellh/vagrant/vagrant_1.7.4_x86_64.deb" dest="{{ install_dir }}vagrant.deb"

  - name: Install Vagrant
    apt: deb="{{ install_dir }}vagrant.deb"

  - name: Install vagrant lxc dependencies.
    apt: pkg={{ item }}
    with_items:
      - redir
      - bridge-utils
      - lxc
      - lxc-templates
      - cgroup-lite

  - name: List vagrant plugins
    command: vagrant plugin list
    register: vagrant_plugins

  - name: Install Vagrant lxc provider.
    sudo: no
    shell: vagrant plugin install vagrant-lxc
    when: '"vagrant-lxc" not in vagrant_plugins'

  - name: Add lxc base boxes.
    sudo: no
    shell: vagrant box add "https://vagrantcloud.com/fgrehm/boxes/"{{ item }}"-lxc"
    with_items:
      - precise64
      - trusty64
    ignore_errors: yes

  # geospatial
#  - name: Ensure ppa:ubuntugis-unstable/ppa repository key is added
#    apt_key: id=314DF160 url='http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x089EBE08314DF160' 

#  - name: Ensure ppa:ubuntugis-unstable/ppa repository is added to the apt sources
#    apt_repository: repo='deb http://ppa.launchpad.net/ubuntugis/ubuntugis-unstable/ubuntu trusty main' state=present

#  - name: Ensure ppa:ubuntugis-unstable/ppa source repository is added to the apt sources
#    apt_repository: repo='deb-src http://ppa.launchpad.net/ubuntugis/ubuntugis-unstable/ubuntu trusty main' state=present update_cache=yes


  # Geospatial packages
#  - name: Geospatial packges (gdal, qgis, etc)
#    apt: pkg={{ item }}
#    with_items:
#      - gdal-bin
#      - qgis

  - name: Set zsh to default shell.
    user: name=berto shell=/bin/zsh

  - name: Python packges
    pip: name={{ item }}
    with_items:
      - virtualenvwrapper
      - powerline-status
      - flake8

    # nodejs ppa
#  - name: Ensure ppa:chris-lea/node.js repository key is added
#    apt_key: id=314DF160 url='http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x6B827C12C2D425E227EDCA75089EBE08314DF160' 

#  - name: Ensure ppa:chris-lea/node.js to repository is added to the apt sources
#    apt_repository: repo='deb http://ppa.launchpad.net/chris-lea/node.js/ubuntu trusty main' state=present update_cache=yes

  # node-js
  - name: Make sure nodejs is installed
    apt: pkg=nodejs force=yes

  - name: Install bower and grunt-cli
    npm: name={{ item }} global=yes 
    with_items:
     - bower
     - grunt-cli
     - jshint

  # setup tmux directories
  - name: Create .tmux dir
    file: >
        path={{ home_dir }}/.tmux/plugins/tpm/
        owner={{ local_user }}
        group={{ local_user }}
        mode=0755
        state=directory
        recurse=yes

  - name: Get tmux plugin manager (TPM)
    sudo: no
    git: repo=https://github.com/tmux-plugins/tpm
         dest={{ home_dir }}/.tmux/plugins/tpm
